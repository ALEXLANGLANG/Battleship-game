/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.xs75.battleship;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.io.EOFException;
/**
 * This class handles the interaction between users and the game.
 */

public class App {
  private Player player1;
  private Player player2;

  /**
   * Constructs an App, given p1,p2
   * 
   * @param p1 is player1
   * @param p2 is player2
   */

  public App(Player p1, Player p2) {
    this.player1 = p1;
    this.player2 = p2;
  }

  /**
   * Do placement for both players
   */
  public void doPlacementPhase() throws IOException {
    this.player1.doPlacementPhase();
    this.player2.doPlacementPhase();
  }

  /**
   * Do attacking for both player. Player1 starts to fire at player2' board and
   * then it is Player2's turn and back and forth. if someone's ships are all
   * sunk, another will be the winner.
   */
  public void doAttackingPhase() throws IOException {
    Player currentPlayer = player1;
    Player nextPlayer = player2;
    while (!currentPlayer.isLost()) {
      currentPlayer.playOneTurn(nextPlayer.getBoard(), nextPlayer.getView(), "Your ocean",
          "Player " + nextPlayer.getName() + "'s ocean");
      Player temp = currentPlayer;
      currentPlayer = nextPlayer;
      nextPlayer = temp;
    }
    nextPlayer.declareWinner();
  }

  /**
   * This creates a player either computer or human. It will ask user to choose
   * which kind of player.
   * @param name is the player's name
   * @param b is the battleshipbaord for this player
   * @param inputReader is the input reader
   * @param out is the print stream
   * @param determistic is the flag is decide if we create a compuerplayer with fixed randomseed
   * @return player 
   */
  public static Player createOnePlayer(String name, Board<Character> b, BufferedReader inputReader, PrintStream out,
                                       V1V2ShipFactory factory,boolean determistic) throws IOException {
    while (true) {
      out.println("Player " + name + ": do you want a computer to represent you? Please enter  Y (yes) or N (no).");
      String s = inputReader.readLine();
      if (s == null){
        throw new EOFException("Nothing read from the terminal.");
      }
      if (s.length() == 1) {
        s = s.toUpperCase();
        char selection = s.charAt(0);
        if (selection == 'N') {
          return new TextPlayer(name, b, inputReader, out, factory);
        } else if (selection == 'Y') {
          if (determistic){
            return new ComputerPlayer(name, b, out, factory,20);
          }
          else{
            return new ComputerPlayer(name, b, out, factory);}
        }
      }
    }
  }

  /**
   * This handles the whole picture of the game It asks players to do placement
   * and then do attacking between each other
   */
  public static void main(String[] args) throws IOException {
    Board<Character> b1 = new BattleShipBoard<Character>('X', 10, 20);
    Board<Character> b2 = new BattleShipBoard<Character>('X', 10, 20);
    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    V1V2ShipFactory factory = new V1V2ShipFactory();
    Player p1 = App.createOnePlayer("A", b1, input, System.out, factory,false);
    Player p2 = App.createOnePlayer("B", b2, input, System.out, factory,false);
    App app = new App(p1, p2);
    app.doPlacementPhase();
    app.doAttackingPhase();
  }
}
